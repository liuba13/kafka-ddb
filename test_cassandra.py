#!/usr/bin/env python3
"""
–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –∑ Cassandra
"""

import socket
import subprocess
import sys
import time

def check_port(host, port):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –ø–æ—Ä—Ç—É"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(3)
        result = sock.connect_ex((host, port))
        sock.close()
        return result == 0
    except:
        return False

def check_cassandra_process():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π –ø—Ä–æ—Ü–µ—Å Cassandra"""
    try:
        result = subprocess.run(['ps', 'aux'], capture_output=True, text=True)
        return 'cassandra' in result.stdout.lower()
    except:
        return False

def try_simple_connection():
    """–°–ø—Ä–æ–±–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Cassandra"""
    try:
        from cassandra.cluster import Cluster
        from cassandra.policies import DCAwareRoundRobinPolicy
        
        # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        cluster = Cluster(['127.0.0.1'], port=9042)
        session = cluster.connect()
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–µ—Ä—Å—ñ—ó
        row = session.execute("SELECT release_version FROM system.local").one()
        version = row.release_version
        
        cluster.shutdown()
        return True, version
    except Exception as e:
        return False, str(e)

def main():
    print("üîç –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê CASSANDRA")
    print("=" * 30)
    
    # –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—É
    print("1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—É 9042...")
    if check_port('127.0.0.1', 9042):
        print("   ‚úÖ –ü–æ—Ä—Ç 9042 –≤—ñ–¥–∫—Ä–∏—Ç–∏–π")
    else:
        print("   ‚ùå –ü–æ—Ä—Ç 9042 –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π")
        print("   üí° Cassandra –π–º–æ–≤—ñ—Ä–Ω–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞")
    
    # –ö—Ä–æ–∫ 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—É
    print("\n2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—É Cassandra...")
    if check_cassandra_process():
        print("   ‚úÖ –ü—Ä–æ—Ü–µ—Å Cassandra –∑–Ω–∞–π–¥–µ–Ω–æ")
    else:
        print("   ‚ùå –ü—Ä–æ—Ü–µ—Å Cassandra –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    
    # –ö—Ä–æ–∫ 3: –°–ø—Ä–æ–±–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    print("\n3. –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...")
    success, result = try_simple_connection()
    if success:
        print(f"   ‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ (–≤–µ—Ä—Å—ñ—è: {result})")
    else:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: {result}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    
    if not check_port('127.0.0.1', 9042):
        print("üöÄ –ó–∞–ø—É—Å—Ç—ñ—Ç—å Cassandra:")
        print("   macOS: brew services start cassandra")
        print("   Linux: sudo systemctl start cassandra")
        print("   –í—Ä—É—á–Ω—É: cassandra -f")
        print("\n‚è≥ –ó–∞—á–µ–∫–∞–π—Ç–µ 30-60 —Å–µ–∫—É–Ω–¥ –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É")
        
    elif not success:
        print("üîß –ü—Ä–æ–±–ª–µ–º–∏ –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º:")
        print("   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å Cassandra")
        print("   ‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ª–æ–≥–∏: tail -f /usr/local/var/log/cassandra/system.log")
        print("   ‚Ä¢ –°–ø—Ä–æ–±—É–π—Ç–µ: cqlsh localhost 9042")
    
    else:
        print("‚úÖ Cassandra –ø—Ä–∞—Ü—é—î –Ω–æ—Ä–º–∞–ª—å–Ω–æ!")

if __name__ == "__main__":
    main()